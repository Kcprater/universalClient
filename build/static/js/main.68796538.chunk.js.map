{"version":3,"sources":["home/Navbar.js","helpers/environment.js","auth/Login.js","auth/Signup.js","auth/Auth.js","ratings/CreateRating.js","ratings/RatingTable.js","ratings/EditRating.js","ratings/RatingIndex.js","App.js","serviceWorker.js","index.js"],"names":["Sitebar","props","useState","isOpen","setIsOpen","className","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","Button","id","clickLogout","APIURL","window","location","hostname","Login","email","setEmail","password","setPassword","Form","onSubmit","event","preventDefault","fetch","method","body","JSON","stringify","user","headers","Headers","then","response","json","data","setToken","sessionToken","FormGroup","Label","htmlFor","Input","autocomplete","onChange","e","target","value","name","type","Signup","passwordhash","setPasswordHash","length","alert","console","log","autoComplete","Auth","Container","Row","Col","md","CreateRating","nameOfRide","setNameOfRide","date","setDate","waitTime","setWaitTime","rideRating","setRideRating","comments","setComments","rating","token","res","rideData","fetchRatings","placeholder","min","max","RatingTable","Table","riderratings","map","riderrating","index","key","color","editUpdateRating","updateOn","deleteRating","RatingEdit","ratingToUpdate","editNameOfRide","setEditNameOfRide","editDate","setEditDate","editWaitTime","setEditWaitTime","editRideRating","setEditRideRating","editComments","setEditComments","Modal","ModalHeader","ModalBody","updateOff","RatingIndex","setRiderRatings","updateActive","setUpdateActive","setRatingToUpdate","ratingData","useEffect","EditRating","App","setSessionToken","localStorage","getItem","newToken","setItem","clearToken","clear","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.68796538.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport './Navbar.css';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\nconst Sitebar = (props) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    let newIsOpen = !isOpen;\r\n    setIsOpen(newIsOpen);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n    <div className=\"title\">UNIVERSAL ORLANDO ATTRACTION GUIDE! </div>\r\n    <Navbar className=\"bar\" light expand=\"md\">\r\n      <NavbarBrand></NavbarBrand>\r\n      <NavbarToggler onClick={toggle}/>\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n          <Button id=\"logout\" onClick={props.clickLogout}>Log Out</Button>\r\n          </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sitebar;","let APIURL ='';\r\n\r\nswitch (window.location.hostname) {\r\n  case 'localhost' || '127.0.0.1':\r\n    APIURL = 'http://localhost:3000';\r\n    break;\r\n    case 'kp-universalclient.herokuapp.com':\r\n\r\n    APIURL ='https://kp-universalapi.herokuapp.com' \r\n}\r\nexport default APIURL;","import React, {useState} from \"react\";\r\nimport {Form, FormGroup, Label, Input, Button} from \"reactstrap\";\r\nimport \"./auth.css\"\r\nimport APIURL from '../helpers/environment'\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetch(`${APIURL}/api/user/login`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({user: {email: email, password: password}}),\r\n      headers: new Headers ({\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    }).then(\r\n      (response) => response.json()\r\n      ).then((data) => {\r\n        props.setToken(data.sessionToken);\r\n      })\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>Login</h1>\r\n      <Form id=\"login\" onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n          <Label htmlFor=\"email\">Email</Label>\r\n          <Input autocomplete=\"off\" onChange={(e) => setEmail(e.target.value)} name=\"email\" value={email}/>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label htmlFor=\"password\">Password</Label>\r\n          <Input type=\"password\" onChange={(e) => setPassword(e.target.value)} name=\"password\" value={password}/>\r\n        </FormGroup>\r\n        <Button id=\"button\" type=\"submit\">Login</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport {Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\nimport \"./auth.css\"\r\nimport APIURL from '../helpers/environment'\r\n\r\nconst Signup = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [passwordhash, setPasswordHash] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(passwordhash.length < 5) {\r\n      alert('Password must be at least 5 characters')\r\n    } else {\r\n      fetch(`${APIURL}/api/user`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({user:{email: email, passwordhash: passwordhash}}),\r\n        headers: new Headers ({\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      }).then(\r\n        (response) => response.json()\r\n        ).then((data) => {\r\n          console.log(data);\r\n          props.setToken(data.sessionToken)\r\n        })\r\n      }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>Sign Up</h1>\r\n      <Form id='signup' onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n          <Label htmlFor=\"email\">Email</Label>\r\n          <Input autoComplete=\"off\" type=\"email\" onChange={(e) => setEmail(e.target.value)} name=\"email\" value={email}/>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label htmlFor=\"password\">Password</Label>\r\n          <Input autoComplete=\"off\" type=\"password\" onChange={(e) => setPasswordHash(e.target.value)} name=\"password\" value={passwordhash}/>  \r\n        </FormGroup>\r\n        <Button id=\"button\" type=\"submit\">Signup</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup;","import React from 'react';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\nimport \"./auth.css\"\r\n\r\n\r\nconst Auth = (props) => {\r\n  return (\r\n    <div className=\"main\">\r\n      <Container id=\"signup-con\">\r\n        <Row>\r\n          <Col md='12'>\r\n            <Signup setToken={props.setToken}/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container id=\"login-con\">\r\n        <Row>\r\n          <Col md='12'>\r\n            <Login setToken={props.setToken}/>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth;","import React, {useState} from \"react\";\r\nimport {Button, Form, FormGroup, Label, Input} from \"reactstrap\";\r\nimport './Ratings.css';\r\nimport APIURL from '../helpers/environment'\r\n\r\nconst CreateRating = (props) => {\r\n  const [nameOfRide, setNameOfRide] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [waitTime, setWaitTime] = useState('');\r\n  const [rideRating, setRideRating] = useState('');\r\n  const [comments, setComments] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetch(`${APIURL}/api/rating`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({rating: {nameOfRide: nameOfRide, date: date, waitTime: waitTime, rideRating: rideRating, comments: comments}}),\r\n      headers: new Headers({\r\n        \"Content-Type\": 'application/json',\r\n        \"Authorization\": props.token\r\n      })\r\n    }).then((res) => res.json())\r\n    .then((rideData) => {\r\n      console.log(rideData);\r\n      setNameOfRide('');\r\n      setDate('');\r\n      setWaitTime('');\r\n      setRideRating('');\r\n      setComments('');\r\n      props.fetchRatings();\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>Create a Rating</h2>\r\n      <Form id=\"tableCreate\" onSubmit={handleSubmit}>\r\n        <FormGroup>\r\n        <Label htmlFor=\"nameOfRide\"/>\r\n        <Input type=\"select\" id=\"nameOfRide\" name=\"nameOfRide\" value={nameOfRide} onChange={(e) => setNameOfRide(e.target.value)} placeholder=\"Name of Ride\">\r\n        <option>Attraction Name</option>\r\n        <option value=\"Caro-Suess-el\">Caro-Suess-el</option>\r\n        <option value=\"Despicable Me Minion Mayhem\">Despicable Me Minion Mayhem</option>\r\n        <option value=\"Doctor Doom's Fearfall\">Doctor Doom's Fearfall</option>\r\n        <option value=\"Dudley Do-Right's Ripsaw Falls\">Dudley Do-Right's Ripsaw Falls</option>\r\n        <option value=\"E.T. Adventure\">E.T. Adventure</option>\r\n        <option value=\"Fast and Furious - Supercharged\">Fast and Furious - Supercharged</option>\r\n        <option value=\"Flight of the Hippogriff\">Flight of the Hippogriff</option>\r\n        <option value=\"Hagrids Magical Creatures Motorbike Adventure\">Hagrids Magical Creatures Motorbike Adventure</option>\r\n        <option value=\"Harry Potter and the Escape from Gringotts\">Harry Potter and the Escape from Gringotts</option>\r\n        <option value=\"Harry Potter and the Forbidden Journey\">Harry Potter and the Forbidden Journey</option>\r\n        <option value=\"Hogwarts Express: Hogsmeade Station\">Hogwarts Express: Hogsmeade Station</option>\r\n        <option value=\"Hogwarts Express: Kings Cross Station\">Hogwarts Express: Kings Cross Station</option>\r\n        <option value=\"Hollywood Rip Ride Rockit\">Hollywood Rip Ride Rockit</option>\r\n        <option value=\"Jurassic Park River Adventure\">Jurassic Park River Adventure</option>\r\n        <option value=\"Kang and Kodos' Twirl 'n' Hurl\">Kang and Kodos' Twirl 'n' Hurl</option>\r\n        <option value=\"MEN IN BLACK Alien Attack\">MEN IN BLACK Alien Attack</option>\r\n        <option value=\"One Fish, Two Fish, Red Fish, Blue Fish\">One Fish, Two Fish, Red Fish, Blue Fish</option>\r\n        <option value=\"Popeye and Bluto's Bilge-Rat Barges\">Popeye and Bluto's Bilge-Rat Barges</option>\r\n        <option value=\"Poseidon's Fury\">Poseidon's Fury</option>\r\n        <option value=\"Pteranodon Flyers\">Pteranodon Flyers</option>\r\n        <option value=\"Race Through New York Starring Jimmy Fallon\">Race Through New York Starring Jimmy Fallon</option>\r\n        <option value=\"Revenge of the Mummy\">Revenge of the Mummy</option>\r\n        <option value=\"Shrek 4-D\">Shrek 4-D</option>\r\n        <option value=\"Skull Island: Reign of Kong\">Skull Island: Reign of Kong</option>\r\n        <option value=\"Storm Force Accelatron\">Storm Force Accelatron</option>\r\n        <option value=\"The Amazing Adventures of Spider-Man\">The Amazing Adventures of Spider-Man</option>\r\n        <option value=\"The Cat in the Hat\">The Cat in the Hat</option>\r\n        <option value=\"The High in the Sky Seuss Trolly Train Ride!\">The High in the Sky Seuss Trolly Train Ride!</option>\r\n        <option value=\"The Incredible Hulk Coaster\">The Incredible Hulk Coaster</option>\r\n        <option value=\"The Simpson Ride\">The Simpson Ride</option>\r\n        <option value=\"Transformers: The Ride-3D\">Transformers: The Ride-3D</option>\r\n        <option value=\"Woody Woodpecker's Nuthouse Coaster\">Woody Woodpecker's Nuthouse Coaster</option>\r\n        </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Label htmlFor=\"date\"/>\r\n        <Input name=\"trip-start\" type=\"date\" id=\"start\" value={date} onChange={(e) => setDate(e.target.value)} min=\"2000-01-01\" max=\"2020-12-31\">\r\n        </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Label htmlFor=\"waitTime\"/>\r\n        <Input name=\"waitTime\" value={waitTime} onChange={(e) => setWaitTime(e.target.value)} placeholder=\"Minutes Waited\"/>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Input type=\"select\" id=\"riderrating\" name=\"RiderRating\" value={rideRating} onChange={(e) => setRideRating(e.target.value)} placeholder=\"Attraction Rating\">\r\n        <option>Attraction Rating</option>\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n        <option value=\"3\">3</option>\r\n        <option value=\"4\">4</option>\r\n        <option value=\"5\">5</option>\r\n        </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n        <Label htmlFor=\"comments\"/>\r\n        <Input name=\"comments\" value={comments} onChange={(e) => setComments(e.target.value)} placeholder=\"Comments\"/>\r\n        </FormGroup>\r\n        <Button id=\"button\" type=\"submit\">Submit Rating</Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateRating;","import React from \"react\";\r\nimport {Table, Button} from \"reactstrap\";\r\nimport './Ratings.css';\r\nimport APIURL from '../helpers/environment'\r\n\r\nconst RatingTable = (props) => {\r\n  console.log(props)\r\n  const deleteRating = (riderrating) => {\r\n    fetch(`${APIURL}/api/rating/${riderrating.id}`, {\r\n      method: \"DELETE\",\r\n      headers: new Headers ({\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": props.token\r\n      })\r\n    })\r\n    .then(() => props.fetchRatings())\r\n  }\r\n\r\n  const riderratingMapper = () => {\r\n    return props.riderratings.map((riderrating, index) => {\r\n      return(\r\n        <tr key={index}>\r\n          {/* <th scope=\"row\"></th> */}\r\n          <td className=\"tdName\">{riderrating.nameOfRide}</td>\r\n          <td className=\"tdDate\">{riderrating.date}</td>\r\n          <td className=\"tdWait\">{riderrating.waitTime}</td>\r\n          <td className=\"tdRate\">{riderrating.rideRating}</td>\r\n          <td className=\"tdCom\">{riderrating.comments}</td>\r\n          <td>\r\n            <Button id=\"update\" color=\"primary\" onClick={() => {props.editUpdateRating(riderrating); props.updateOn()}}>Update</Button>\r\n            <Button id=\"delete\" color=\"danger\" onClick={() => {deleteRating(riderrating)}}>Delete</Button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n      \r\n  return(\r\n    <div>\r\n      <h2>Rating History</h2>\r\n      <hr/>\r\n      <Table className=\"table-main\">\r\n        <thead>\r\n          <tr>\r\n            {/* <th>#</th> */}\r\n            <th className=\"name\">Attraction Name</th>\r\n            <th className=\"date\">Date</th>\r\n            <th className=\"wait\">Wait Time (minutes)</th>\r\n            <th className=\"rating\">Attraction Rating</th>\r\n            <th className=\"comments\">Comments</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {riderratingMapper()}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RatingTable;","import React, {useState} from \"react\";\r\nimport {Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody} from \"reactstrap\";\r\nimport APIURL from '../helpers/environment'\r\n\r\nconst RatingEdit = (props) => {\r\n  const [editNameOfRide, setEditNameOfRide] = useState(props.ratingToUpdate.nameOfRide);\r\n  const [editDate, setEditDate] = useState(props.ratingToUpdate.date);\r\n  const [editWaitTime, setEditWaitTime] = useState(props.ratingToUpdate.waitTime);\r\n  const [editRideRating, setEditRideRating] = useState(props.ratingToUpdate.rideRating);\r\n  const [editComments, setEditComments] = useState(props.ratingToUpdate.comments);\r\n\r\nconst ratingUpdate = (event, rating) => {\r\n  event.preventDefault();\r\n  fetch(`${APIURL}/api/rating/${props.ratingToUpdate.id}`, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({rating: {nameOfRide: editNameOfRide, date: editDate, waitTime: editWaitTime, rideRating: editRideRating, comments: editComments}}),\r\n    headers: new Headers ({\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": props.token\r\n    })\r\n  }).then((res) => {\r\n    props.fetchRatings();\r\n    props.updateOff();\r\n  })\r\n}\r\n\r\n  return(\r\n    <Modal isOpen={true}>\r\n      <ModalHeader>Rate An Attraction</ModalHeader>\r\n      <ModalBody>\r\n        <Form onSubmit={ratingUpdate}>\r\n          <FormGroup>\r\n            <Label htmlFor=\"nameOfRide\">Change Name:</Label>\r\n            <Input type=\"select\" id=\"nameOfRide\" name=\"nameOfRide\" value={editNameOfRide} onChange={(e) => setEditNameOfRide(e.target.value)} placeholder=\"Name of Ride\">\r\n            <option>Attraction Name</option>\r\n            <option value=\"Caro-Suess-el\">Caro-Suess-el</option>\r\n            <option value=\"Despicable Me Minion Mayhem\">Despicable Me Minion Mayhem</option>\r\n            <option value=\"Doctor Doom's Fearfall\">Doctor Doom's Fearfall</option>\r\n            <option value=\"Dudley Do-Right's Ripsaw Falls\">Dudley Do-Right's Ripsaw Falls</option>\r\n            <option value=\"E.T. Adventure\">E.T. Adventure</option>\r\n            <option value=\"Fast and Furious - Supercharged\">Fast and Furious - Supercharged</option>\r\n            <option value=\"Flight of the Hippogriff\">Flight of the Hippogriff</option>\r\n            <option value=\"Hagrids Magical Creatures Motorbike Adventure\">Hagrids Magical Creatures Motorbike Adventure</option>\r\n            <option value=\"Harry Potter and the Escape from Gringotts\">Harry Potter and the Escape from Gringotts</option>\r\n            <option value=\"Harry Potter and the Forbidden Journey\">Harry Potter and the Forbidden Journey</option>\r\n            <option value=\"Hogwarts Express: Hogsmeade Station\">Hogwarts Express: Hogsmeade Station</option>\r\n            <option value=\"Hogwarts Express: Kings Cross Station\">Hogwarts Express: Kings Cross Station</option>\r\n            <option value=\"Hollywood Rip Ride Rockit\">Hollywood Rip Ride Rockit</option>\r\n            <option value=\"Jurassic Park River Adventure\">Jurassic Park River Adventure</option>\r\n            <option value=\"Kang and Kodos' Twirl 'n' Hurl\">Kang and Kodos' Twirl 'n' Hurl</option>\r\n            <option value=\"MEN IN BLACK Alien Attack\">MEN IN BLACK Alien Attack</option>\r\n            <option value=\"One Fish, Two Fish, Red Fish, Blue Fish\">One Fish, Two Fish, Red Fish, Blue Fish</option>\r\n            <option value=\"Popeye and Bluto's Bilge-Rat Barges\">Popeye and Bluto's Bilge-Rat Barges</option>\r\n            <option value=\"Poseidon's Fury\">Poseidon's Fury</option>\r\n            <option value=\"Pteranodon Flyers\">Pteranodon Flyers</option>\r\n            <option value=\"Race Through New York Starring Jimmy Fallon\">Race Through New York Starring Jimmy Fallon</option>\r\n            <option value=\"Revenge of the Mummy\">Revenge of the Mummy</option>\r\n            <option value=\"Shrek 4-D\">Shrek 4-D</option>\r\n            <option value=\"Skull Island: Reign of Kong\">Skull Island: Reign of Kong</option>\r\n            <option value=\"Storm Force Accelatron\">Storm Force Accelatron</option>\r\n            <option value=\"The Amazing Adventures of Spider-Man\">The Amazing Adventures of Spider-Man</option>\r\n            <option value=\"The Cat in the Hat\">The Cat in the Hat</option>\r\n            <option value=\"The High in the Sky Seuss Trolly Train Ride!\">The High in the Sky Seuss Trolly Train Ride!</option>\r\n            <option value=\"The Incredible Hulk Coaster\">The Incredible Hulk Coaster</option>\r\n            <option value=\"The Simpson Ride\">The Simpson Ride</option>\r\n            <option value=\"Transformers: The Ride-3D\">Transformers: The Ride-3D</option>\r\n            <option value=\"Woody Woodpecker's Nuthouse Coaster\">Woody Woodpecker's Nuthouse Coaster</option>\r\n        </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"date\">Change Date:</Label>\r\n            <Input name=\"trip-start\" type=\"date\" id=\"start\" value={editDate} onChange={(e) => setEditDate(e.target.value)} min=\"2000-01-01\" max=\"2020-12-31\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"waitTime\">Edit Wait Time:</Label>\r\n            <Input name=\"waitTime\" value={editWaitTime} onChange={(e) => setEditWaitTime(e.target.value)}/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"rideRating\">Edit Rating:</Label>\r\n            <Input type=\"select\" id=\"riderrating\" name=\"RiderRating\" value={editRideRating} onChange={(e) => setEditRideRating(e.target.value)} placeholder=\"Ride Rating\">\r\n              <option>Ride Rating</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label htmlFor=\"comments\">Edit Comments:</Label>\r\n            <Input name=\"comments\" value={editComments} onChange={(e) => setEditComments(e.target.value)}/>\r\n          </FormGroup>\r\n          <Button id=\"button\" type=\"submit\">Update Your Rating!</Button>\r\n        </Form>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default RatingEdit;","import React, {useState, useEffect} from \"react\";\r\nimport {Container, Row, Col} from \"reactstrap\";\r\nimport CreateRating from \"./CreateRating\";\r\nimport RatingTable from \"./RatingTable\";\r\nimport EditRating from \"./EditRating\";\r\nimport APIURL from '../helpers/environment'\r\n\r\nconst RatingIndex = (props) => {\r\n  console.log(props)\r\n\r\n  const [riderratings, setRiderRatings] = useState([]);\r\n  const [updateActive, setUpdateActive] = useState(false);\r\n  const [ratingToUpdate, setRatingToUpdate] = useState({});\r\n\r\n  const fetchRatings = () => {\r\n    fetch(`${APIURL}/api/rating`, {\r\n      method: \"GET\",\r\n      headers: new Headers ({\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\": props.token\r\n      })\r\n    }).then( (res) => res.json())\r\n    .then((ratingData) => {\r\n      setRiderRatings(ratingData)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRatings();\r\n  }, [])\r\n\r\n  const editUpdateRating = (riderrating) => {\r\n    setRatingToUpdate(riderrating);\r\n    // console.log(riderrating);\r\n  }\r\n\r\n  const updateOn = () => {\r\n    setUpdateActive(true);\r\n  }\r\n\r\n  const updateOff = () => {\r\n    setUpdateActive(false);\r\n  }\r\n\r\n  return(\r\n    <Container>\r\n      <Row>\r\n        <Col md=\"3\">\r\n          <CreateRating fetchRatings={fetchRatings} token={props.token}/>\r\n        </Col>\r\n        <Col md=\"8\">\r\n          <RatingTable riderratings={riderratings} editUpdateRating={editUpdateRating} updateOn={updateOn} fetchRatings={fetchRatings}\r\n          token={props.token}/>\r\n        </Col>\r\n        {updateActive ? <EditRating ratingToUpdate={ratingToUpdate} \r\n        updateOff={updateOff} token={props.token} fetchRatings={fetchRatings}/> : <></>}\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default RatingIndex;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Sitebar from './home/Navbar';\nimport Auth from './auth/Auth';\nimport RatingIndex from './ratings/RatingIndex';\n\nfunction App() {\n\n  const [sessionToken, setSessionToken] = useState('');\n\n  useEffect (() => {\n    if (localStorage.getItem('token')){\n      setSessionToken(localStorage.getItem('token'));\n    }\n  }, [])\n\n  const setToken = (newToken) => {\n    localStorage.setItem('token', newToken);\n    setSessionToken(newToken);\n    // console.log(sessionToken);\n  }\n\n  const clearToken = () => {\n    localStorage.clear();\n    setSessionToken('');\n  }\n\n  const protectedViews = () => {\n    return (sessionToken === localStorage.getItem('token') ? \n      <RatingIndex token={sessionToken} clickLogout={clearToken} />\n    : <Auth setToken={setToken}/>)\n  }\n\n\n\n  return (\n    <div>\n      <Sitebar clickLogout={clearToken} token={sessionToken}/>\n      {protectedViews()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}